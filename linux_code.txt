# Install PIP
sudo apt update
sudo apt install python3-pip

# Install REST Service
pip3 install Flask

# Install other libraries
pip3 install pyjwt
pip3 install requests
pip3 install requests-cache

# Install pyodbc
sudo apt-get install unixodbc-dev
pip3 install pyodbc

# Install docker, nginx and gcc
sudo apt install docker.io
sudo docker pull nginx
sudo apt-get install gcc


# Create a new working directory
cd ~
mkdir app
cd app

# Create Rest service
sudo nano myapp.py

# Update myapp.py with the python code

# Update file permissions
sudo chmod 777 myapp.py

# Create a requirements.txt
sudo nano requirements.txt

# Add the following to the requirements.txt file
Flask
requests
requests_cache
pyodbc

# Create a dockerfile
sudo nano Dockerfile

# Add the following to the Dockerfile
FROM python:3
WORKDIR /app
ADD requirements.txt .
ADD myapp.py .
# install FreeTDS and dependencies
RUN apt-get update \
 && apt-get install unixodbc -y \
 && apt-get install unixodbc-dev -y \
 && apt-get install freetds-dev -y \
 && apt-get install freetds-bin -y \
 && apt-get install tdsodbc -y \
 && apt-get install --reinstall build-essential -y
# populate "ocbcinst.ini" as this is where ODBC driver config sits
RUN echo "[FreeTDS]\n\
Description = FreeTDS Driver\n\
Driver = /usr/lib/x86_64-linux-gnu/odbc/libtdsodbc.so\n\
Setup = /usr/lib/x86_64-linux-gnu/odbc/libtdsS.so" >> /etc/odbcinst.ini
#Pip command without proxy setting
RUN pip install -r requirements.txt
CMD ["python","-i","myapp.py"]



# Build the doker image
sudo docker build -t investment_app:v1 .
	
# Run the docker image
sudo docker run -p 80:80 investment_app:v1

